name: Build | Release

on:
  push:
    branches:
      - main
      - 137_inno_setup

jobs:
  #  build_android:
  #    name: Android
  #    environment: release
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Setup Java
  #        uses: actions/setup-java@v3
  #        with:
  #          distribution: 'zulu'
  #          java-version: '11'
  #      - name: Setup Flutter
  #        uses: subosito/flutter-action@v2
  #        with:
  #          channel: 'stable'
  #      - name: Add configuration
  #        run: echo "${{ vars.CONFIG }}" > assets/config/config.yaml
  #      - name: Add keystore
  #        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/studiorvandco_keystore.jks
  #      - name: Add key properties
  #        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" > android/key.properties
  #      - name: Build app
  #        run: flutter build apk --release
  #      - name: Rename APK
  #        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/CPM_Android.apk
  #      - name: Archive APK
  #        uses: actions/upload-artifact@v3
  #        with:
  #          name: Android
  #          path: build/app/outputs/flutter-apk/CPM_Android.apk
  #
  #  # TODO: build and release
  #  build_ios:
  #    name: iOS
  #    environment: release
  #    runs-on: macos-latest
  #    steps:
  #      - run: echo TODO

  build_windows_inno_setup:
    name: Windows (InnoSetup)
    environment: release
    runs-on: windows-latest
    steps:
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Add config
        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
      - name: Build app
        run: flutter build windows --release
      - name: Build the Inno Setup Installer
        uses: actions/checkout@v3
      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.0.0
        with:
          path: windows/CPM.iss

#  build_windows:
#    name: Windows
#    environment: release
#    runs-on: windows-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#      - name: Add config
#        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
#      - name: Build app
#        run: flutter build windows --release
#      - name: Create setup directory
#        run: mkdir setup
#      - name: Get version
#        run: |
#          choco install yq
#          echo "VERSION=$(yq -r .version pubspec.yaml)" >> $env:GITHUB_ENV
#      - name: Build MSI
#        uses: caphyon/advinst-github-action@v1.0
#        with:
#          aip-path: 'windows/Cinema Project Manager.aip'
#          aip-build-name: 'DefaultBuild'
#          aip-package-name: 'CPM_Windows.msi'
#          aip-commands: |
#            SetVersion ${{ env.VERSION }}
#      - name: Archive MSI
#        uses: actions/upload-artifact@v3
#        with:
#          name: Windows
#          path: ${{ github.workspace }}/setup/CPM_Windows.msi
#
#  # TODO: release
#  build_linux:
#    name: Linux
#    environment: release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#      - name: Install required packages
#        run: |
#          sudo apt-get update -y
#          sudo apt-get install -y ninja-build libgtk-3-dev
#          sudo apt-get install -y libsecret-1-dev libjsoncpp-dev
#      - name: Add config
#        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
#      - name: Build app
#        run: flutter build linux --release
#      - name: Upload to artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: Linux
#          path: build/linux/x64/release/bundle
#
#  # TODO: build and release
#  build_macos:
#    name: MacOS
#    environment: release
#    runs-on: macos-latest
#    steps:
#      - run: echo TODO
#
#  # TODO: release
#  build_web:
#    name: Web
#    environment: release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#      - name: Add config
#        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
#      - name: Build app
#        run: flutter build web --release
#      - name: Upload to artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: Web
#          path: web
#
#  release:
#    name: Release
#    environment: release
#    needs: [ build_android, build_ios, build_windows, build_linux, build_macos, build_web ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Download all artifacts
#        uses: actions/download-artifact@v3
#      - name: Get version
#        id: yq
#        uses: mikefarah/yq@master
#        with:
#          cmd: yq -r '.version' 'pubspec.yaml'
#      - name: Upload to releases
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: 'Android/CPM_Android.apk, Windows/CPM_Windows.msi'
#          token: ${{ secrets.GITHUB_TOKEN }}
#          tag: ${{ steps.yq.outputs.result }}