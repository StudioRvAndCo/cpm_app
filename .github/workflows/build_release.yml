name: Build | Release

on:
  push:
    branches:
      - main
      - 151_ci

jobs:
  build_android:
    name: Android
    environment: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Add configuration
        run: echo "${{ vars.CONFIG }}" > assets/config/config.yaml
      - name: Add keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/studiorvandco_keystore.jks
      - name: Add key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" > android/key.properties
      - name: Get version
        id: version
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.version' 'pubspec.yaml'
      - name: Build app
        run: flutter build apk --release
      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/CPM_${{ steps.version.outputs.result }}.apk
      - name: Archive APK
        uses: actions/upload-artifact@v3
        with:
          name: Android
          path: build/app/outputs/flutter-apk/CPM_${{ steps.version.outputs.result }}.apk

  # TODO: build and release
  #  build_ios:
  #    name: iOS
  #    environment: release
  #    runs-on: macos-latest
  #    steps:
  #      - run: echo TODO#

  build_windows:
    name: Windows
    environment: release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Add config
        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
      - name: Get version
        run: |
          choco install yq
          echo "VERSION=$(yq -r .version pubspec.yaml)" >> $env:GITHUB_ENV
      - name: Replace version
        uses: MathieuSoysal/replace-string-in-file@v1.0.0
        with:
          file: windows/CPM.iss
          old-string: 0.1.0
          new-string: ${{ env.VERSION }}
      - name: Build app
        run: flutter build windows --release
      - name: Run InnoSetup
        uses: Minionguyjpro/Inno-Setup-Action@v1.0.0
        with:
          path: windows/CPM.iss
          options: /O+
      - name: Archive installer
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: windows\Output\CPM_${{ env.VERSION }}.exe

  # TODO: release
  #  build_linux:
  #    name: Linux
  #    environment: release
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Setup Flutter
  #        uses: subosito/flutter-action@v2
  #        with:
  #          channel: 'stable'
  #      - name: Install required packages
  #        run: |
  #          sudo apt-get update -y
  #          sudo apt-get install -y ninja-build libgtk-3-dev
  #          sudo apt-get install -y libsecret-1-dev libjsoncpp-dev
  #      - name: Add config
  #        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
  #      - name: Build app
  #        run: flutter build linux --release
  #      - name: Upload to artifacts
  #        uses: actions/upload-artifact@v3
  #        with:
  #          name: Linux
  #          path: build/linux/x64/release/bundle

  # TODO: build and release
  #  build_macos:
  #    name: MacOS
  #    environment: release
  #    runs-on: macos-latest
  #    steps:
  #      - run: echo TODO

  build_publish_web:
    name: Web
    environment: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Add config
        run: echo "${{ vars.CPM_CONFIG }}" > assets/config/config.yaml
      - name: Build app
        run: flutter build web --release
      - name: Upload to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Web
          path: build/web
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_PAGE_ID }}
          projectName: cpm-rvandco
          directory: build/web
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          wranglerVersion: '3'

  release:
    name: Release
    environment: release
    needs: [ build_android, build_windows ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Get version
        id: version
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.version' 'pubspec.yaml'
      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{ steps.version.outputs.result }}"
          message: "Release of Cinema Project Manager (version ${{ steps.version.outputs.result }})"
      - name: Upload to releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'Android/CPM_${{ steps.version.outputs.result }}.apk, Windows/CPM_${{ steps.version.outputs.result }}.exe'
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ steps.version.outputs.result }}"